
var {{Model}} = require('../path/to/model').{{Model}},
    HttpStatusCodes = require('../lib/http_status_codes'); 

/*
 * GET /models
 */
exports.index = function(req, res) {
    {{Model}}.find(function(err, items) {
        res.statusCode = HttpStatusCodes.OK;
        res.json(items);
    });
};

/*
 * GET /models/:id
 */
exports.show = function(req, res) {
    {{Model}}.findById(req.params.id, function(err, item) {
        if (item) {
            res.statusCode = HttpStatusCodes.OK;
            res.json(item);
        } else {
            res.statusCode = HttpStatusCodes.NOT_FOUND;
            res.write();
            res.end();
        }
    });
};

/*
 *  POST /models
 */
exports.create = function(req, res) {
    var args = { name: req.body.name };
    {{Model}}.create(args, function(err, item) {
        if (err) {
            res.statusCode = HttpStatusCodes.CONFLICT;
            res.json(err);
        } else {
            res.json(item);
        }
    });
};

/*
 *  PUT/PATCH /models/:id
 */
exports.update = function(req, res) {

    var name = req.body.name;
    var id = req.params.id;
    
    {{Model}}.findById(id, function(err, item) {
        /* istanbul ignore if */
        if (err) {
            res.statusCode = HttpStatusCodes.NOT_FOUND;
            res.write();
            res.end();
        } else {
            if (item.name == name) {
                res.statusCode = HttpStatusCodes.NOT_MODIFIED; // Not modified
                res.write();
                res.end();
            } else {
                item.name = name;
                item.save(function(err) {
                    res.json(item);
                });
            }
        }
    });
};

/*
 *  DELETE /models/:id
 */
exports.destroy = function(req, res) {

    var id = req.params.id;

    {{Model}}.remove({_id : id}, function(err, item) {
        if (err || !item) {
            res.statusCode = HttpStatusCodes.NOT_FOUND;
            res.write();
            res.end();
        } else {
            res.json(item);
        }
    });

};


